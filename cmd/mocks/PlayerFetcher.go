// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	repository "team-cli/repository"

	mock "github.com/stretchr/testify/mock"
)

// PlayerFetcher is an autogenerated mock type for the PlayerFetcher type
type PlayerFetcher struct {
	mock.Mock
}

// GetTeamPlayers provides a mock function with given fields: _a0
func (_m *PlayerFetcher) GetTeamPlayers(_a0 map[string]bool) (repository.PlayerRepository, error) {
	ret := _m.Called(_a0)

	var r0 repository.PlayerRepository
	if rf, ok := ret.Get(0).(func(map[string]bool) repository.PlayerRepository); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.PlayerRepository)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]bool) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPlayerFetcher interface {
	mock.TestingT
	Cleanup(func())
}

// NewPlayerFetcher creates a new instance of PlayerFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPlayerFetcher(t mockConstructorTestingTNewPlayerFetcher) *PlayerFetcher {
	mock := &PlayerFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
